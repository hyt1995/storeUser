swagger: '2.0'

info:
  title: gemp-user-api
  description: GEMP 프로젝트의 User 서비스 API 문서입니다.
  version: '1.0.0'

host: $$host$$
basePath: /v1-user
schemes:
  - https

paths:
  /:
    get:
      x-cdk-lambda-code: ./api/healthCheck
      summary: API 정상 작동 여부를 체크합니다.
      produces:
        - application/json
      responses:
        200:
          description: API 정상 작동 여부를 반환합니다.
          schema:
            type: object
            properties:
              health:
                type: boolean
            example:
              health: true
  /me:
    get:
      x-cdk-lambda-code: ./api/getMe
      x-cdk-lambda-memory-size: 1024
      summary: 로그인 여부를 확인합니다.
      description: 로그인 여부를 확인하고, 토큰에 담긴 payload들을 반환합니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
      responses:
        200:
          description: 로그인이 되어있을 때, userIdx를 반환합니다.
          schema:
            type: object
            properties:
              userIdx:
                type: number
              email:
                type: string
              is_admin:
                type: boolean
            example:
              userIdx: 1
              email: jeongwoo@ifgroup.io
              is_admin: false
  /auth:
    post:
      x-cdk-lambda-code: ./api/postAuth
      x-cdk-lambda-memory-size: 2048
      summary: 로그인을 요청합니다.
      description: 로그인을 처리합니다.

        email나 sns를 통해 로그인을 진행할 수 있습니다.

        현재 지원하는 sns 로그인 방식은 네이버, 카카오 로그인입니다.

        로그인이 성공하면 쿠키에 토큰을 저장합니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
        - name: body
          in: body
          description: 로그인을 위한 사용자의 이메일과 비밀번호입니다. authMethod를 통하여 이메일 로그인, sns 로그인 중에 하나를 선택합니다. authMethod가 email일 경우에는 email과 password, sns일 경우에는 email과 certificateToken값이 required입니다.
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
              authMethod:
                type: string
                enum: ['email', 'kakao', 'naver', 'google']
              isAutoLogin:
                type: boolean
            required:
              - authMethod
              - isAutoLogin
            example:
              email: sri02075@ifgroup.io
              password: myPassword12@@
              authMethod: email
              isAutoLogin: false
      responses:
        200:
          description: API 응답 상태를 반환합니다.
          headers:
            Set-Cookie:
              type: string
              description: access토큰이 담긴 쿠키입니다.
              format: accessToken=exampleAccessToken;
            "\0Set-Cookie":
              type: string
              description: refresh 토큰이 담긴 쿠키입니다.
              format: refreshToken=exampleRefreshToken;
          schema:
            type: object
            properties:
              userIdx:
                type: number
                description: 사용자 고유 인식 번호
              email:
                type: string
                description: 사용자 이메일
            example:
              userIdx: 1
              email: jeongwoo@ifgroup.io
  /logout:
    post:
      x-cdk-lambda-code: ./api/postLogout
      x-cdk-lambda-memory-size: 1024
      summary: 로그아웃을 요청합니다.
      description: 유저에게 저장된 액세스 토큰과 리프레시 토큰을 삭제하고, DB에 저장된 토큰을 삭제하여, 로그아웃 처리를 합니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
      responses:
        200:
          description: 로그아웃 성공 여부를 반환합니다.
          headers:
            Set-Cookie:
              type: string
              description: access토큰을 삭제하는 쿠키입니다.
              format: accessToken=exampleAccessToken;max-age=0;
            "\0Set-Cookie":
              type: string
              description: refresh 토큰을 삭제하는 쿠키입니다.
              format: refreshToken=exampleRefreshToken;max-age=0;
          schema:
            type: object
            properties:
              result:
                type: boolean
            example:
              result: true
  /users:
    get:
      x-cdk-lambda-code: ./api/getUsers
      x-cdk-lambda-memory-size: 1024
      summary: 회원 목록을 조회합니다.
      description: 유저 리스트를 조회합니다.

        관리자만 사용 가능한 API입니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - in: query
          name: limit
          type: number
          required: true
          description: 응답 받을 갯수
        - in: query
          name: offset
          type: number
          required: true
          description: 건너 뛸 항목 갯수
        - in: query
          name: selectFields
          type: array
          items:
            type: string
            enum:
              [
                idx,
                email,
                name,
                age,
                phone_number,
                is_certificate_phone,
                investor_type,
                is_abandon_asset,
                abandonment_amount,
              ]
          description: 응답 받을 필드
        - in: query
          name: filterFields
          type: array
          items:
            type: string
            enum:
              [
                idx,
                email,
                name,
                age,
                phone_number,
                is_certificate_phone,
                investor_type,
                is_abandon_asset,
                abandonment_amount,
              ]
          description: 필터링할 필드
        - in: query
          name: filterValues
          type: array
          items:
            type: string
          description: 필터링할 값
        - in: query
          name: searchFields
          type: array
          items:
            type: string
            enum:
              [
                idx,
                email,
                name,
                age,
                phone_number,
                is_certificate_phone,
                investor_type,
                is_abandon_asset,
                abandonment_amount,
              ]
          description: 검색할 필드
        - in: query
          name: searchValues
          type: array
          items:
            type: string
          description: 검색 값
        - in: query
          name: rangeFields
          type: array
          items:
            type: string
            enum:
              [
                idx,
                email,
                name,
                age,
                phone_number,
                is_certificate_phone,
                investor_type,
                is_abandon_asset,
                abandonment_amount,
              ]
          description: 구간 필터링할 필드
        - in: query
          name: rangeStarts
          type: array
          items:
            type: string
          description: 구간 필터링 시작 값
        - in: query
          name: rangeEnds
          type: array
          items:
            type: string
          description: 구간 필터링 종료 값
        - in: query
          name: sortBys
          type: array
          items:
            type: string
            enum:
              [
                idx,
                email,
                name,
                age,
                phone_number,
                is_certificate_phone,
                investor_type,
                is_abandon_asset,
                abandonment_amount,
              ]
          description: 정렬할 필드
        - in: query
          name: orderBys
          type: array
          items:
            type: string
            enum: [asc, desc]
          description: 정렬 방식
      responses:
        200:
          description: 회원 목록을 반환합니다.
          headers:
            Set-Cookie:
              type: string
              description: access토큰이 담긴 쿠키입니다.
              format: accessToken=exampleAccessToken;
          schema:
            type: object
            properties:
              count:
                type: number
                description: 집계된 사용자 수
              items:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                      description: 회원 고유인식번호
                    email:
                      type: string
                      description: 이메일
                    name:
                      type: string
                      description: 이름
                    age:
                      type: number
                      description: 나이
                    phone_number:
                      type: string
                      description: 연락처
                    is_certificate_phone:
                      type: boolean
                      description: 핸드폰 인증 상태
                    investor_type:
                      type: string
                      enum: ['일반 투자자', '적격 투자자', '전문 투자자']
                      description: 투자자 유형
                    is_abandon_asset:
                      type: boolean
                      description: 자산 삭감 동의 여부
                    abandonment_amount:
                      type: number
                      description: 자산 삭감 금액
            example:
              count: 602
              items:
                - idx: 32
                  email: ironflag@ifgroup.io
                  name: 강철기
                  age: 29
                  phone_number: '010-XXXX-XXXX'
                  is_certificate_phone: true
                  investor_type: 일반 투자자
                  is_abandon_asset: false
                  abandonment_amount: undefined
    post:
      x-cdk-lambda-code: ./api/postUsers
      x-cdk-lambda-memory-size: 2048
      summary: 회원가입을 요청합니다.
      description: 가입을 요청하는 회원의 정보를 받아 회원가입을 처리합니다.

        email나 sns를 통해 회원가입을 진행할 수 있습니다.

        현재 지원하는 sns 로그인 방식은 네이버, 카카오 로그인입니다.


        동의 여부의 필수 여부는 아래와 같습니다.

        이용약관 동의 여부 - 필수

        개인정보  처리방침 동의 여부 - 필수

        마케팅 활용 동의 여부 - 선택
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - name: body
          in: body
          description: 회원가입을 위한 요청값입니다. authMethod를 통하여 가입 방식을 선택합니다. authMethod가 email일 경우에는 password는 required입니다.
          schema:
            type: object
            properties:
              password:
                type: string
              authMethod:
                type: string
                enum: ['email', 'kakao', 'naver']
              serviceTerm:
                type: boolean
                description: 이용약관 동의 여부
              privateTerm:
                type: boolean
                description: 개인정보  처리방침 동의 여부
              marketingTerm:
                type: boolean
                description: 마케팅 활용 동의 여부
            required:
              - email
              - authMethod
              - serviceTerm
              - privateTerm
              - marketingTerm
            example:
              password: myPassword12@@
              authMethod: email
              serviceTerm: true
              privateTerm: true
              marketingTerm: true
      responses:
        200:
          description: API의 응답 상태를 반환합니다.
          schema:
            type: object
            properties:
              userIdx:
                type: number
                description: 사용자 고유 인식 번호
            example:
              userIdx: 32
  /users/{idx}:
    get:
      x-cdk-lambda-code: ./api/getUsersIdx
      x-cdk-lambda-memory-size: 1024
      summary: 유저 상세정보를 조회합니다.
      description: 유저의 상세정보를 조회합니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - in: path
          name: idx
          type: string
          required: true
          description: 유저 고유인식번호
      responses:
        200:
          description: API의 응답 상태를 반환합니다.
          schema:
            type: object
            properties:
              idx:
                type: number
                description: 유저 고유인식번호
              email:
                type: string
                description: 유저 이메일 주소
              user_state:
                type: string
                description: 유저 상태
                enum:
                  [
                    waiting,
                    normal,
                    deactive,
                    sanction_abnormal_transaction,
                    sanction_abnormal_access,
                    dormancy,
                  ]
              login_method:
                type: string
                description: 로그인 방법
                enum:
                  - email
                  - kakao
                  - naver
              created_at:
                type: number
                description: 생성일
              updated_at:
                type: number
                description: 수정일
              name:
                type: string
                description: 유저 이름
              profile_image_url:
                type: string
                description: 유저 프로필 이미지
              nick_name:
                type: string
                description: 유저 닉네임
              phone:
                type: string
                description: 유저 휴대전화 번호
              birth:
                type: string
                description: 유저 생년월일
                format: date
              gender:
                type: boolean
                description: 성별
              country:
                type: string
                description: 국가
              investor_type:
                type: string
                description: 유저 투자자격
                enum: ['general', 'professional', 'qualified']
              phone_verified:
                type: boolean
                description: 유저 모바일 인증 여부
              otp_enabled:
                type: boolean
                description: OTP 인증 여부
              kyc_verified:
                type: boolean
                description: KYC 인증 여부
            required:
              - idx
              - email
              - user_state
              - login_method
              - created_at
            example:
              idx: 32
              email: 'jeongwoo@ifgroup.io'
              user_state: 'waiting'
              login_method: 'email'
              created_at: 1620000000000
              updated_at: 1620000000000
              name: '이정우'
              profile_image_url: null
              nick_name: null
              phone: '01095220890'
              birth: '1992-01-01'
              gender: null
              country: null
              investor_type: 'general'
              phone_verified: true
              otp_enabled: false
              kyc_verified: false
    delete:
      x-cdk-lambda-code: ./api/deleteUserIdx
      x-cdk-lambda-memory-size: 1024
      summary: 회원 탈퇴를 진행합니다.
      description: 회원 탈퇴를 진행합니다.

        유저의 자산을 모두 삭감하고, 유저 상태를 탈퇴로 변경한 뒤, 회원탈퇴 여부를 반환합니다.

        자산 삭감은 자진 삭감 동의여부에 따라 진행됩니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - name: idx
          in: path
          type: string
          required: true
          description: 유저 고유 번호
        - name: body
          in: body
          description: 자진 삭감 동의여부
          schema:
            type: object
            properties:
              assetAbandonTerm:
                type: boolean
            required:
              - assetAbandonTerm
      responses:
        200:
          description: 회원탈퇴 여부를 반환합니다.
          schema:
            type: object
            properties:
              result:
                type: boolean
                description: 회원탈퇴 여부
            example:
              result: success
    put:
      x-cdk-lambda-code: ./api/putUsersIdx
      summary: 어드민에서 회원정보를 수정합니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - in: path
          name: idx
          type: number
          required: true
          description: 사용자 고유인식번호
        - in: body
          name: body
          schema:
            type: object
            properties:
              user_state:
                type: string
                description: 유저 상태
                enum:
                  [
                    waiting,
                    normal,
                    deactive,
                    sanction_abnormal_transaction,
                    sanction_abnormal_access,
                    dormancy,
                  ]
              investor_type:
                type: string
                description: 유저 투자자격
                enum: ['general', 'professional', 'qualified']
      responses:
        200:
          description: API 응답 상태를 반환합니다.
          schema:
            type: object
            properties:
              idx:
                type: number
                description: 수정한 아이템 idx
  /users/{idx}/password:
    put:
      x-cdk-lambda-code: ./api/putUsersIdxPassword
      x-cdk-lambda-memory-size: 1024
      summary: 비밀번호를 변경합니다.
      description: 비밀번호를 변경합니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - name: idx
          in: path
          type: string
          required: true
          description: 유저 고유 인식 번호
        - name: body
          in: body
          description: 변경할 유저 비밀번호
          schema:
            type: object
            properties:
              password:
                type: string
            example:
              password: 'myPassword1@@'
      responses:
        200:
          description: API 응답 상태를 반환합니다.
          schema:
            type: object
            properties:
              status:
                type: string
                description: API 응답 상태
            example:
              status: success
  /users/{idx}/check-password:
    post:
      x-cdk-lambda-code: ./api/postUserIdxCheckPassword
      x-cdk-lambda-memory-size: 1024
      summary: 비밀번호 일치 여부를 확인합니다.
      description: 입력한 비밀번호가 등록되어 있는 비밀번호와 일치하는지 확인합니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - name: idx
          in: path
          type: string
          required: true
          description: 유저 고유 인식 번호
        - name: body
          in: body
          required: true
          description: 일치하는지 확인할 비밀번호
          schema:
            type: object
            properties:
              password:
                type: string
            example:
              password: myPassword1@@
      responses:
        200:
          description: API 응답 상태를 반환합니다.
          schema:
            type: object
            properties:
              status:
                type: string
                description: API 응답 상태
            example:
              status: success
        400:
          description: API 응답 상태를 반환합니다.
          schema:
            type: object
            properties:
              status:
                type: string
                description: API 응답 상태
              errorCode:
                type: string
                description: 에러 코드
              errorString:
                type: string
                description: 에러 메시지
            example:
              예시1:
                status: failed
                errorCode: E21001
                errorString: SNS로 가입하신 회원은 GEMP내의 비밀번호 수정이 어렵습니다.
              예시2:
                status: failed
                errorCode: E21004
                errorString: 기존 비밀번호와 일치하지 않습니다.
  /users/{idx}/assets:
    get:
      x-cdk-lambda-code: ./api/getUsersIdxAsset
      x-cdk-lambda-memory-size: 1024
      summary: 유저 보유자산 목록을 확인합니다.
      description: 유저 보유자산 목록을 확인합니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - name: idx
          in: path
          type: string
          required: true
          description: 유저 고유 번호
      responses:
        200:
          description: 유저 보유자산을 반환합니다.
          schema:
            type: object
            properties:
              cash:
                type: number
                description: 거래 가능 자산 = 현금 + 이벤트로 받은 금액 + 리워드
              total_investment_amount:
                type: number
                description: 총 투자금액
              total_asset_amount:
                type: number
                description: 총 보유 자산 = 거래가능자산 + 총 투자금액
              total_reward_income:
                type: number
                description: 누적 리워드 수익
              total_reward_income_percentage:
                type: number
                description: 누적 리워드 수익(%) = 총 누적 리워드 수익 / 투자금액(%)
              investement_products:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: string
                      description: 상품 고유 번호
                    name:
                      type: string
                      description: 상품 이름
                    price:
                      type: number
                      description: 상품 가격
                    amount:
                      type: number
                      description: 상품 수량
                    investment_amount:
                      type: number
                      description: 투자금액 = 회원이 투자한 자산의 매수가
                    reward_income:
                      type: number
                      description: 리워드 수익 = 리워드로 얻은 금액
                    reward_income_percentage:
                      type: number
                      description: 리워드 수익(%) = 리워드금액 / 투자금액(%)
                    investment_ratio:
                      type: number
                      description: 투자비중 = 투자금액 / 총투자금액(%)
  /users/{idx}/balance:
    get:
      x-cdk-lambda-code: ./api/getUsersIdxBalance
      x-cdk-lambda-memory-size: 1024
      summary: 유저 보유 잔액을 확인합니다.
      description: 유저 보유 잔액을 확인합니다.

        잔액 종류는 아래와 같습니다.

        balance - 유저가 입금하여 보유하고 있는 잔액

        reward - 유저가 투자를 하여 리워드로 얻은 금액

        event - 유저가 이벤트를 통해 얻은 금액
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - name: idx
          in: path
          type: string
          required: true
          description: 유저 고유 번호
      responses:
        200:
          description: 유저 보유 잔액을 반환합니다.
          schema:
            type: object
            properties:
              balance:
                type: number
              reward:
                type: number
              event:
                type: number
  /users/{idx}/favorites:
    get:
      x-cdk-lambda-code: ./api/getUsersIdxFavorites
      summary: 관심 목록을 조회합니다.
      x-cdk-lambda-memory-size: 1024
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - in: path
          name: idx
          type: number
          required: true
          description: 사용자 고유인식번호
        - in: query
          name: limit
          type: number
          description: 응답 받을 갯수
        - in: query
          name: offset
          type: number
          description: 건너 뛸 항목 갯수
        - in: query
          name: selectFields
          type: array
          items:
            type: string
            enum:
              - idx
              - user_idx
              - product_idx
              - created_at
          description: 응답 받을 필드
        - in: query
          name: filterFields
          type: array
          items:
            type: string
            enum:
              - idx
              - user_idx
              - product_idx
              - created_at
          description: 필터링할 필드
        - in: query
          name: filterValues
          type: array
          items:
            type: string
          description: 필터링할 값
        - in: query
          name: searchFields
          type: array
          items:
            type: string
            enum:
              - idx
              - user_idx
              - product_idx
              - created_at
          description: 검색할 필드
        - in: query
          name: searchValues
          type: array
          items:
            type: string
          description: 검색 값
        - in: query
          name: rangeFields
          type: array
          items:
            type: string
            enum:
              - idx
              - user_idx
              - product_idx
              - created_at
          description: 구간 필터링할 필드
        - in: query
          name: rangeStarts
          type: array
          items:
            type: string
          description: 구간 필터링 시작 값
        - in: query
          name: rangeEnds
          type: array
          items:
            type: string
          description: 구간 필터링 종료 값
        - in: query
          name: sortBys
          type: array
          items:
            type: string
            enum:
              - idx
              - user_idx
              - product_idx
              - created_at
          description: 정렬할 필드
        - in: query
          name: orderBys
          type: array
          items:
            type: string
            enum:
              - asc
              - desc
          description: 정렬 방식
      responses:
        200:
          description: 유저가 찜한 게시글을 반환합니다.
          headers:
            Set-Cookie:
              type: string
              description: access토큰이 담긴 쿠키입니다.
              format: accessToken=exampleAccessToken;
          schema:
            type: object
            properties:
              count:
                type: number
                description: 집계된 항목 수
              items:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                      description: 관심 목록 인덱스
                    user_idx:
                      type: number
                      description: 유저 인덱스
                    product_idx:
                      type: number
                      description: 게시글 인덱스
                    created_at:
                      type: string
                      description: 생성일
    put:
      x-cdk-lambda-code: ./api/putUsersIdxFavorites
      summary: 관심 목록을 변경합니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - in: path
          name: idx
          type: number
          required: true
          description: 사용자 고유인식번호
        - in: body
          name: body
          schema:
            type: object
            properties:
              product_idx:
                type: number
                description: 상품 고유인식번호
              isFavorite:
                type: boolean
                description: 관심 목록 여부
      responses:
        200:
          description: 관심 목록을 변경합니다.
          headers:
            Set-Cookie:
              type: string
              description: access토큰이 담긴 쿠키입니다.
              format: accessToken=exampleAccessToken;
          schema:
            type: object
  /users/{idx}/logs:
    get:
      x-cdk-lambda-code: ./api/getUsersIdxLogs
      x-cdk-lambda-memory-size: 1024
      summary: 회원의 로그들을 가져옵니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - in: path
          name: idx
          type: number
          required: true
          description: 사용자 고유인식번호
        - in: query
          name: offset
          type: number
          required: true
          description: 건너 뛸 항목 갯수
        - in: query
          name: limit
          type: number
          required: true
          description: 응답 받을 갯수
        - in: query
          name: sortBy
          type: string
          enum: ['logIdx', 'type', 'created_at']
          description: 정렬 기준
        - in: query
          name: orderBy
          type: string
          enum: ['desc', 'asc']
          description: 정렬 순서
      responses:
        200:
          description: 회원의 로그 목록을 반환합니다.
          schema:
            type: object
            properties:
              count:
                type: number
                description: 로그 목록 수
              items:
                type: array
                items:
                  type: object
                  properties:
                    idx:
                      type: number
                      description: 로그 고유인식번호
                    type:
                      type: string
                      enum:
                        [
                          '회원가입',
                          '로그인',
                          '1:1 문의',
                          '입금',
                          '출금',
                          '참여',
                          '철회',
                        ]
                      description: 요청 종류
                    created_at:
                      type: number
                      description: 로그 기록일 (timestamp)
                    note:
                      type: string
                      description: 비고
            example:
              count: 1592
              items:
                - idx: 1
                  type: 회원가입
                  created_at: 1669709374371
                  note: 회원가입을 하였습니다.
                - idx: 2
                  type: 로그인
                  created_at: 1669834362957
                  note: 로그인을 하였습니다.
  /emails/signup:
    post:
      x-cdk-lambda-code: ./api/postEmailsSignUp
      x-cdk-lambda-memory-size: 1024
      summary: 회원가입을 위한 이메일 인증 코드를 생성하고 이메일로 발송합니다.
      description: 회원가입을 위한 이메일 인증 코드를 생성하고 발송합니다.

        10분 당 인증 코드 발송 횟수는 5회로 제한됩니다.
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          description: 인증 코드를 생성하기 위한 이메일 주소입니다.
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        200:
          description: API 응답 상태를 반환합니다.
          schema:
            type: object
            properties:
              status:
                type: string
                description: API 응답 상태
            example:
              status: success
  /emails/find-password:
    post:
      x-cdk-lambda-code: ./api/postEmailsFindPassword
      x-cdk-lambda-memory-size: 1024
      summary: 비밀번호 찾기를 위한 이메일 인증 코드를 생성하고 이메일로 발송합니다.
      description: 비밀번호 찾기를 위한 이메일 인증 코드를 생성하고 발송합니다.

        10분 당 인증 코드 발송 횟수는 5회로 제한됩니다.
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          description: 인증 코드를 생성하기 위한 이메일 주소입니다.
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        200:
          description: API 응답 상태를 반환합니다.
          schema:
            type: object
            properties:
              status:
                type: string
                description: API 응답 상태
            example:
              status: success
  /verify-sns:
    post:
      x-cdk-lambda-code: ./api/postVerifySns
      x-cdk-lambda-memory-size: 1024
      summary: SNS 로그인이 정상적으로 이루어졌는지 검증합니다.
      description: SNS 로그인이 정상적으로 이루어졌는지 검증합니다.

        SNS 로그인을 진행할 때, SNS에서 제공하는 토큰을 이용하여 검증합니다.
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: SNS를 사용하여, Email 점유 검증을 하기 위한 토큰 ID와 플랫폼 이름입니다.
          schema:
            type: object
            properties:
              tokenId:
                type: string
                description: SNS 로그인 후 받은 tokenId입니다.
              platform:
                type: string
                enum: [kakao, naver, google]
                description: SNS 로그인을 진행할 플랫폼입니다.
              state:
                type: string
                description: 플랫폼이 naver일 경우 추가되는 값입니다.
            required:
              - tokenId
              - platform
            example:
              tokenId: snsTokenIdValue
              platform: naver
              state: naverStateValue
      responses:
        200:
          description: 해당 SNS에 등록된 Email로 GEMP에 가입되어 있는 지 반환합니다.
          headers:
            Set-Cookie:
              type: string
              description: 인증 토큰이 담긴 쿠키입니다.
              format: certificateToken=exampleCertificateToken;
          schema:
            type: object
            properties:
              status:
                type: string
              isRegistered:
                type: boolean
            example:
              status: success
              isRegistered: true
  /verify-email:
    post:
      x-cdk-lambda-code: ./api/postVerifyEmail
      x-cdk-lambda-memory-size: 1024
      summary: 이메일 인증 코드를 검증하고 인증 토큰을 반환합니다.
      description: 이메일 인증 코드를 검증하고 3분의 유효기간을 가진 인증 용도의 토큰을 반환합니다.
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          description: 인증 코드와 이메일 주소입니다.
          schema:
            type: object
            properties:
              email:
                type: string
                description: 인증 코드를 발송한 이메일
              code:
                type: string
                description: 인증 코드
      responses:
        200:
          description: API 응답 상태를 반환합니다.
          schema:
            type: object
            properties:
              status:
                type: string
                description: API 응답 상태
            example:
              status: success
  /accounts/idx:
    get:
      x-cdk-lambda-code: ./api/getAccountsIdx
      x-cdk-lambda-memory-size: 1024
      summary: 이메일로 유저 idx를 조회합니다.
      description: 이메일로 유저 idx를 조회합니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - in: query
          name: email
          type: string
          required: true
          description: 유저 이메일
      responses:
        200:
          description: 유저 idx를 반환합니다.
          headers:
            Set-Cookie:
              type: string
              description: access토큰이 담긴 쿠키입니다.
              format: accessToken=exampleAccessToken;
          schema:
            type: object
            properties:
              idx:
                type: string
                description: 이메일로 조회한 유저 idx
            example:
              idx: 32
  /accounts/password:
    put:
      x-cdk-lambda-code: ./api/putAccountPassword
      x-cdk-lambda-memory-size: 1024
      summary: 이메일 인증을 받은 회원이 비밀번호를 변경합니다.
      description: 이메일로 인증을 받은 로그인하지 않은 회원이 비밀번호를 변경합니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
        - name: body
          in: body
          description: 변경할 유저 비밀번호
          schema:
            type: object
            properties:
              password:
                type: string
      responses:
        200:
          description: API 응답 상태를 반환합니다.
          schema:
            type: object
            properties:
              status:
                type: string
                description: API 응답 상태
            example:
              status: success
  /visitor-count:
    get:
      x-cdk-lambda-code: ./api/getVisitorCount
      x-cdk-lambda-memory-size: 1024
      summary: 현재 접속자 수를 반환합니다.
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
      responses:
        200:
          description: 조회한 접속자 수를 반환합니다.
          headers:
            Set-Cookie:
              type: string
              description: access토큰이 담긴 쿠키입니다.
              format: accessToken=exampleAccessToken;
          schema:
            type: object
            properties:
              count:
                type: number
                description: 접속자수를 반환한다.
  /hcToken:
    get:
      x-cdk-lambda-code: ./api/getHcToken
      x-cdk-lambda-memory-size: 1024
      summary: 고객센터 연동 토큰 발급
      produces:
        - application/json
      parameters:
        - in: header
          name: Cookie
          type: string
          required: true
      responses:
        200:
          description: 고객센터 연동 토큰을 반환합니다.
          headers:
            Set-Cookie:
              type: string
              description: access토큰이 담긴 쿠키입니다.
              format: accessToken=exampleAccessToken;
          schema:
            type: object
            properties:
              helpCenterToken:
                type: string
                description: 고객센터 연동 토큰을 반환한다.
  /certifications:
    post:
      x-cdk-lambda-code: ./api/postCertifications
      x-cdk-lambda-memory-size: 1024
      summary: 모바일 인증
      description: 인증 정보를 조회합니다.
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: 아임포트 imp_uid
          schema:
            type: object
            properties:
              imp_uid:
                type: string
                description: 아임포트 imp_uid
              user_idx:
                type: number
                description: 유저 idx
      responses:
        200:
          description: API 응답 상태를 반환합니다.
          schema:
            type: object
  /certifications/redirect/{userIdx}:
    get:
      x-cdk-lambda-code: ./api/getCertificationsRedirectUserIdx
      x-cdk-lambda-memory-size: 1024
      summary: 인증 완료 후 리다이렉트
      description: 인증 완료 후 리다이렉트
      produces:
        - application/json
      parameters:
        - in: path
          name: userIdx
          type: number
          required: true
          description: 사용자 idx
        - in: query
          name: imp_uid
          type: string
          required: true
          description: 아임포트 imp_uid
        - in: query
          name: success
          type: boolean
          required: true
          description: 아임포트 success
      responses:
        200:
          description: API 응답 상태를 반환합니다.
          schema:
            type: object
            properties:
              status:
                type: string
                description: API 응답 상태
            example:
              status: success
